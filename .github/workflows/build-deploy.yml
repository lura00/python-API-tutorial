name: Build and Deploy Code
# if you want it to run on both push and pull-requesut on: [push, pull_request]
on: [push, pull_request]

jobs:
  job1:
    environment:
      name: testing
    env:
      DATABASE_HOSTNAME: ${{secrets.BATMAN}}
      DATABASE_PORT: ${{secrets.SUPERMAN}}
      DATABASE_PASSWORD: ${{secrets.JOKER}}
      DATABASE_NAME: ${{secrets.AQUAMAN}}
      DATABASE_USERNAME: ${{secrets.THE_FLASH}}
      SECRET_KEY: ${{secrets.WONDER_WOMAN}}
      ALGORITHM: ${{secrets.RIDDLER}}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${{secrets.ALFRED}}

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: ${{secrets.JOKER}}
          POSTGRES_DB: ${{secrets.AQUAMAN}}_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    runs-on: ubuntu-latest
    steps:
      - name: pulling git repo
        uses: actions/checkout@v2
      - name: Install python version 3.9
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"
      - name: Update pip
        run: python -m pip install --upgrade pip
      - name: install dependencies
        run: pip install -r requirements.txt
      - name: Test with Pytest
        run: |
          python3.9 -m pip install pytest
          pytest ./tests -v
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{secrets.DOCKER_HUB_USERNAME}}
          password: ${{secrets.DOCKER_HUB_ACCESS_TOKEN}}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          builder: ${{steps.buildx.outputs.name}}
          push: true
          tags: ${{secrets.DOCKER_HUB_USERNAME}}/fastapi-cicd:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
      - name: Image digest
        run: echo ${{steps.docker_build.outputs.digest}}
